@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
  if (Model.Content.HasValue("countDownDateAndTime", true))
  {
    <div class="widget" itemscope itemtype="http://schema.org/BroadcastEvent">
      <div class="widget-title">
        <h4 style="color:#@Umbraco.Field("hexTitleColor") !important" itemprop="name">@Umbraco.Field("titleCD", recursive: true)</h4>
        <hr>
      </div>
      <div id="clockCenter">
        <p class="text-center" itemprop="description">@Umbraco.Field("descriptionCD", recursive: true)</p>
        <meta itemprop="isLiveBroadcast" content="http://schema.org/True" />
        <meta itemprop="videoFormat" content="HD" />
        <meta itemprop="inLanguage" content="en" />
        <meta itemprop="startDate" content="@Umbraco.Field("countDownDateAndTime", recursive: true)" />
        <div id="clockdiv">
          <div>
            <span class="days"></span>
            <div class="smalltext">Days</div>
          </div>
          <div>
            <span class="hours"></span>
            <div class="smalltext">Hours</div>
          </div>
          <div>
            <span class="minutes"></span>
            <div class="smalltext">Minutes</div>
          </div>
          <div>
            <span class="seconds"></span>
            <div class="smalltext">Seconds</div>
          </div>
        </div>
      </div>
      @if (Model.Content.HasValue("countdownimageCD", true))
      {
        var mediaItem = Umbraco.TypedMedia(Model.Content.GetPropertyValue("countdownimageCD", true));
        <img src="@mediaItem.GetPropertyValue("umbracoFile")" class="img-responsive" alt="@mediaItem.GetPropertyValue("Name")" />
      }

      <script>
        function getTimeRemaining(endtime) {
          var t = Date.parse(endtime) - Date.parse(new Date());
          var seconds = Math.floor((t / 1000) % 60);
          var minutes = Math.floor((t / 1000 / 60) % 60);
          var hours = Math.floor((t / (1000 * 60 * 60)) % 24);
          var days = Math.floor(t / (1000 * 60 * 60 * 24));
          return {
            'total': t,
            'days': days,
            'hours': hours,
            'minutes': minutes,
            'seconds': seconds
          };
        }

        function initializeClock(id, endtime) {
          var clock = document.getElementById(id);
          var daysSpan = clock.querySelector('.days');
          var hoursSpan = clock.querySelector('.hours');
          var minutesSpan = clock.querySelector('.minutes');
          var secondsSpan = clock.querySelector('.seconds');
          function updateClock() {
            var t = getTimeRemaining(endtime);
            daysSpan.innerHTML = t.days;
            hoursSpan.innerHTML = ('0' + t.hours).slice(-2);
            minutesSpan.innerHTML = ('0' + t.minutes).slice(-2);
            secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);
            if (t.total <= 0) {
              clearInterval(timeinterval);
            }
          }
          updateClock();
          var timeinterval = setInterval(updateClock, 1000);
        }

        var deadline = new Date("@Umbraco.Field("countDownDateAndTime", recursive: true)");
        initializeClock('clockdiv', deadline);
      </script>
    </div>
  }
}